DequeNodeTest:
* 1. shouldSetItemEqualNewItem: when the Item of a Node is Set, it should replace it
* 2. shouldSetNextEqualNewNext: when the Next of a Node is Set, it should replace it
* 3. shouldSetPreviousEqualNewPrevious: when the Previous of a Node is Set, it should replace it
* 4. shouldFirstOfFirstReturnNull: if a Node is First it should be First
* 5. shouldLastOfLastReturnNull: if a Node is Last it should be Last
* 6. shouldTerminalReturnTerminalFalse: if a Node is Terminal it should be Terminal

DoubleLinkedListQueueTest:
* 1. appendOfNullListHasSameNodeAsFirstAndLast: append on an empty list should be first and last
* 2. appendLeftOfNullListHasSameNodeAsFirstAndLast: append left on an empty list should be first and last
* 3. appendInsertsAtTheEndOfList: append should insert at the end of the list
* 4. appendLeftInsertsAtTheStartOfList: append left should insert at the start of the list
* 5. appendANullObjectRaiseAnException: append of a null should raise an exception
* 6. appendLeftANullObjectRaiseAnException: append left of a null should raise an exception
* 7. sizeOfAnEmptyQueueIs0: size of an empty queue should be 0
* 8. sizeThreeElementQueueIs3: size of a 3-elements queue should be 3
* 9. deleteFirstFromAnEmptyQueueRaiseAnException: delete first on an empty queue should raise an exception
* 10. deleteFirstWorksAsExpected: delete first should work as intended
* 11. deleteFirstOnlyElementResultsInAnEmptyQueue: delete first on a 1-element queue results in an empty queue
* 12. deleteLastFromAnEmptyQueueRaiseAnException: delete last on an empty queue should raise an exception
* 13. deleteLastWorksAsExpected: delete last should work as intended
* 14. deleteLastOnlyElementResultsInAnEmptyQueue: delete last on a 1-element queue results in an empty queue
* 15. peekFirstInAnEmptyQueueRaisesException: peek first on an empty queue should raise an exception
* 16. peekLastInAnEmptyQueueRaisesException: peek last on an empty queue should raise an exception
* 17. peekFirstWorkAsExpected: peek first should work as intended
* 18. peekLastWorkAsExpected: peek last should work as intended
* 19. getAtOf1InEmptyListRaisesException: get from an empty queue raises an exception
* 20. getAtOfNeg1InQueueRaisesException: get a negative index raises an exception
* 21. getAtOf2In2SizedListRaisesException: get an index bigger than queue size -1 raises exception
* 22. getAtOf1In2SizedListReturnNodeTwo |
* 23. getAtOf0In2SizedListReturnNodeOne | getAt returns the element at given index
* 24. findNodeOneWhenContainedInQueue: find the node an item is at
* 25. findNodeThreeWhenNotContainedInQueueRaiseException: trying to find an item that is not in the queue raises an exception
* 26. findNodeThreeWhenNullRaiseException: trying to find a null item raises an exception
* 27. deleteWorksForFirstElementDeletion   |
* 28. deleteWorksForLastElementDeletion    | delete works as expected
* 29. deleteWorksForMiddleElementDeletion  |
* 30. deleteForMissingElementRaisesException: deteting an element thas is not in de queue raises an exception
* 31. sortWorksAsExpected: sort reorders the elements in the queue in the order given by the comparator
* 32. sortOfAnEmptyQueueRaisesAnException: sorting an empty queue raises an exception